#!/bin/bash
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

PROPS_FILE="$1"
KS_FILE="$2"
KS_PASS="$3"
KS_VALIDITY="$4"
CSR_FILE="$5"

LOG_FILE="/var/log/cloudstack/agent/keystore-setup.log"

ALIAS="cloud"
LIBVIRTD_FILE="/etc/libvirt/libvirtd.conf"

log() {
    __log_line="${1}"
    __log_level="${2:-INFO}"

    __log_line="${__log_level}: ${__log_line}"
    echo "${__log_line}" >> "${LOG_FILE}"
    echo "${__log_line}"
}

log "$(date) - starting keystore-setup" >> "${LOG_FILE}"

# Re-use existing password or use the one provided
if [ -f "$PROPS_FILE" ]; then
    log "Previous props file exists, trying to extract password"
    OLD_PASS=$(sed -n '/^keystore.passphrase/p' "$PROPS_FILE" 2>> "${LOG_FILE}"  | sed 's/^keystore.passphrase=//g' 2>> "${LOG_FILE}")
    if [ ! -z "${OLD_PASS// }" ]; then
        KS_PASS="$OLD_PASS"
        log "Password extraction successful"
    else
        sed -i "/^keystore.passphrase.*/d" $PROPS_FILE 2>> "${LOG_FILE}" || true
        echo "keystore.passphrase=$KS_PASS" >> $PROPS_FILE
        if [ $? != 0 ]; then
                log "Could not add new password to agent.properties" "ERROR"
        else
                log "New keystore password set"
        fi
    fi
fi

if [ -f "$KS_FILE" ]; then
    log "keystore file exists. Deleting current entries"
    keytool -delete -noprompt -alias "$ALIAS" -keystore "$KS_FILE" -storepass "$KS_PASS" >> "${LOG_FILE}" || log "Failed to delete current entries" "ERROR"
fi

log "Generating new key"
CN=$(hostname --fqdn)
keytool -genkey -storepass "$KS_PASS" -keypass "$KS_PASS" -alias "$ALIAS" -keyalg RSA -validity "$KS_VALIDITY" -dname cn="$CN",ou="cloudstack",o="cloudstack",c="cloudstack" -keystore "$KS_FILE" >> "${LOG_FILE}" 2>&1

# Generate CSR
log "Generating CSR"
[ -f "$CSR_FILE" ] && rm -f "$CSR_FILE"
addresses=$(ip address | grep inet | awk '{print $2}' | sed 's/\/.*//g' | grep -v '^169.254.' | grep -v '^127.0.0.1' | egrep -v '^::1|^fe80' | grep -v '^::1' | sed 's/^/ip:/g' | tr '\r\n' ',')
log "Found following SAN addresses to add to CSR: ${addresses}"
keytool -certreq -storepass "$KS_PASS" -alias "$ALIAS" -file $CSR_FILE -keystore "$KS_FILE" -ext san="$addresses" >> "${LOG_FILE}" 2>&1
if [ $? -ne 0 ];then
    log "Failed to generate CSR file, retrying after removing existing settings" "ERROR"

    if [ -f "$LIBVIRTD_FILE" ]; then
        log "Reverting libvirtd to not listen on TLS"
        sed -i "s,^listen_tls=1,listen_tls=0,g" $LIBVIRTD_FILE
        systemctl restart libvirtd
    fi

    log "Removing cloud.* files in /etc/cloudstack/agent"
    rm -f /etc/cloudstack/agent/cloud.* || log "Could not remove /etc/cloudstack/agent/cloud.*" "ERROR"

    log "Retrying to generate CSR file"
    keytool -certreq -storepass "$KS_PASS" -alias "$ALIAS" -file $CSR_FILE -keystore "$KS_FILE" -ext san="$addresses" >> "${LOG_FILE}" 2>&1
    if [ $? -ne 0 ];then
        log "Failed to generate CSR file while retrying" "ERROR"
        exit 1
    fi
fi

cat "$CSR_FILE"

# Fix file permissions
chmod 600 $KS_FILE || log "Cannot chmod $KS_FILE" "ERROR"
chmod 600 $PROPS_FILE || log "Cannot chmod $PROPS_FILE" "ERROR"
chmod 600 $CSR_FILE || log "Cannot chmod $CSR_FILE" "ERROR"
