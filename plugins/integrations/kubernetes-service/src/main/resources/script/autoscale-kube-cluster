#! /bin/bash
function usage() {
    cat << USAGE
Usage: ./autoscale-kube-cluster [OPTIONS]...
Enables autoscaling for the kubernetes cluster.
Arguments:
  -i, --id string         ID of the cluster
  -e, --enable            Enables autoscaling
  -d, --disable           Disables autoscaling
  -M, --maxsize number    Maximum size of the cluster
  -m, --minsize number    Minimum size of the cluster
Other arguments:
  -h, --help              Display this help message and exit
Examples:
  ./autoscale-kube-cluster -e -M 3 -m 1
  ./autoscale-kube-cluster -d
USAGE
    exit 0
}
ID=""
ENABLE=""
MINSIZE=""
MAXSIZE=""
while [ -n "$1" ]; do
    case "$1" in
        -h | --help)
            usage
            ;;
        -i | --id)
            ID=$2
            shift 2
            ;;
        -e | --enable)
            ENABLE="true"
            shift 1
            ;;
        -d | --enable)
            ENABLE="false"
            shift 1
            ;;
        -M | --maxsize)
            MAXSIZE=$2
            shift 2
            ;;
        -m | --minsize)
            MINSIZE=$2
            shift 2
            ;;
        -*|*)
            echo "ERROR: no such option $1. -h or --help for help"
            exit 1
            ;;
    esac
done
if [ $ENABLE == "true" ] ; then
    if [ -e /opt/autoscaler/autoscaler_tmpl.yaml ]; then
        sed -e "s/<cluster-id>/$ID/g" -e "s/<min>/$MINSIZE/g" -e "s/<max>/$MAXSIZE/g" /opt/autoscaler/autoscaler_tmpl.yaml > /opt/autoscaler/autoscaler_now.yaml
        kubectl apply -f /opt/autoscaler/autoscaler_now.yaml
        exit 0
    fi
    echo "Cluster does not support automated autoscaling. Please upgrade your cluster to a supported version or deploy the autoscaler manually"
    exit 1
else
    kubectl delete deployment -n kube-system cluster-autoscaler
fi
